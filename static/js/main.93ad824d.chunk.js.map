{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["hashEmail","memoize","avatarUrl","name","size","fontSize","initialsLength","rounded","bold","color","bgColor","uppercase","format","defaultImg","encodeURIComponent","Avatar","props","url","omit","src","email","PropTypes","hash","validation","Yup","shape","required","min","Field","className","htmlFor","id","component","stripHashFromColor","hexcode","slice","getSource","values","App","initialValues","validationSchema","readOnly","value","style","height","type","width","href","ReactDOM","render","document","getElementById"],"mappings":"ihBAMA,IAAMA,EAAYC,IAAlB,KAEMC,EAAY,SAAC,EAAD,GAcb,QAXDC,YAWC,MAXM,mBAWN,MAVDC,YAUC,MAVM,IAUN,MATDC,gBASC,MATU,GASV,MARDC,sBAQC,MARgB,EAQhB,MAPDC,eAOC,aANDC,YAMC,aALDC,aAKC,MALO,SAKP,MAJDC,eAIC,MAJS,SAIT,MAHDC,iBAGC,aAFDC,cAEC,MAFQ,MAER,EACGC,EAAa,8BAA8BC,mBAAjC,uDAAhB,EAQA,MAJY,sCAAH,QAAmDA,mBAAnD,SAAT,GAUIC,EAAS,SAACC,GACd,IAAMC,EAAMf,EACVc,QAAchB,EAAUgB,EADL,OAEnBE,IAAKF,EAAO,CAAC,OAFf,WAKA,OAAO,2BAAKG,IAAKF,GAAjB,KAGFF,YAAmB,CACjBK,MAAOC,IADU,OAEjBC,KAAMD,IAFW,OAGjBlB,KAAMkB,WAHW,WAIjBjB,KAAMiB,IAJW,OAKjBhB,SAAUgB,IALO,OAMjBf,eAAgBe,IANC,OAOjBd,QAASc,IAPQ,KAQjBb,KAAMa,IARW,KASjBX,QAASW,IATQ,OAUjBZ,MAAOY,IAVU,OAWjBV,UAAWU,IAXM,KAYjBT,OAAQS,UAAgB,CAAC,MAAjBA,S,wBCnDJE,EAAaC,MAAaC,MAAM,CACpCL,MAAOI,MAAaJ,QACpBjB,KAAMqB,MAAaE,WACnBJ,KAAME,MACNpB,KAAMoB,MAAaG,IAAI,GACvBtB,SAAUmB,MACVlB,eAAgBkB,MAChBjB,QAASiB,MACThB,KAAMgB,MACNf,MAAOe,MACPd,QAASc,MACTb,UAAWa,QAGPI,EAAQ,SAACZ,GAAD,OACZ,sBAAKa,UAAU,aAAf,UACE,uBAAOC,QAAO,gBAAWd,EAAMb,MAA/B,SAAwCa,EAAMb,OAC9C,cAAC,IAAD,2BACMa,GADN,IAEEa,UAAU,eACVE,GAAE,gBAAWf,EAAMb,SAErB,cAAC,IAAD,CACEA,KAAMa,EAAMb,KACZ6B,UAAU,QACVH,UAAU,8BAKVI,EAAqB,SAACC,GAAD,MACN,kBAAZA,EAAuBA,EAAQC,MAAM,GAAKD,GAE7CE,EAAY,SAACC,GAAD,kCACPA,EAAOjB,MADA,sBAERiB,EAAOlC,KAFC,sBAGRkC,EAAOjC,KAHC,0BAIJiC,EAAOhC,SAJH,gCAKEgC,EAAO/B,eALT,uBAMP2B,EAAmBI,EAAO5B,OANnB,yBAOLwB,EAAmBI,EAAO3B,SAPrB,gBAQd2B,EAAO9B,QAAU,WAAa,IARhB,OAQqB8B,EAAO7B,KAAO,QAAU,IAR7C,OAShB6B,EAAO1B,UAAY,aAAe,GATlB,SAwHH2B,EA3GH,WACV,OACE,sBAAKT,UAAU,iBAAf,UACE,4DACA,cAAC,IAAD,CACEU,cAAe,CACbnB,MAAO,sBACPjB,KAAM,mBACNmB,KAAM,GACNlB,KAAM,IACNC,SAAU,GACVC,eAAgB,EAChBC,SAAS,EACTC,MAAM,EACNC,MAAO,UACPC,QAAS,UACTC,WAAW,GAEb6B,iBAAkBjB,EAdpB,SAgBG,gBAAGc,EAAH,EAAGA,OAAH,OACC,cAAC,IAAD,CAAMR,UAAU,OAAhB,SACE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,cAAf,SACE,cAAC,EAAD,2BACMQ,GADN,IAEE5B,MAAOwB,EAAmBI,EAAO5B,OACjCC,QAASuB,EAAmBI,EAAO3B,cAIvC,sBAAKmB,UAAU,MAAf,UACE,sBAAKA,UAAU,OAAf,UACE,iDACA,6EAGF,sBAAKA,UAAU,OAAf,UACE,2DACA,sFAGF,gCACE,4DACA,0BACEA,UAAU,eACVY,UAAQ,EACRC,MAAON,EAAUC,GACjBM,MAAO,CAAEC,OAAQ,oBAMzB,sBAAKf,UAAU,MAAf,UACE,cAAC,EAAD,CAAO1B,KAAK,UACZ,cAAC,EAAD,CAAOA,KAAK,SACZ,cAAC,EAAD,CAAOA,KAAK,OAAO0C,KAAK,WACxB,cAAC,EAAD,CAAO1C,KAAK,WAAW0C,KAAK,WAC5B,cAAC,EAAD,CAAO1C,KAAK,iBAAiB0C,KAAK,WAElC,sBAAKhB,UAAU,MAAf,UACE,qBAAKA,UAAU,MAAf,SACE,cAAC,EAAD,CAAO1B,KAAK,UAAU0C,KAAK,eAE7B,qBAAKhB,UAAU,MAAf,SACE,cAAC,EAAD,CAAO1B,KAAK,OAAO0C,KAAK,eAE1B,qBAAKhB,UAAU,MAAf,SACE,cAAC,EAAD,CAAO1B,KAAK,YAAY0C,KAAK,kBAIjC,sBAAKhB,UAAU,MAAf,UACE,qBAAKA,UAAU,MAAf,SACE,cAAC,EAAD,CACE1B,KAAK,QACL0C,KAAK,QACLF,MAAO,CAAEG,MAAO,QAASF,OAAQ,YAGrC,qBAAKf,UAAU,MAAf,SACE,cAAC,EAAD,CACE1B,KAAK,UACL0C,KAAK,QACLF,MAAO,CAAEG,MAAO,QAASF,OAAQ,0BAUjD,yBAAQf,UAAU,kCAAlB,oCAC0B,IACxB,mBAAGkB,KAAK,wBAAR,8BAFF,UAE8D,IAC5D,mBAAGA,KAAK,2DAAR,2BClJRC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.93ad824d.chunk.js","sourcesContent":["import React from 'react'\nimport memoize from 'lodash.memoize'\nimport omit from 'lodash.omit'\nimport md5 from 'md5'\nimport PropTypes from 'prop-types'\n\nconst hashEmail = memoize(md5)\n\nconst avatarUrl = (\n  hash,\n  {\n    name = 'Snehanshu Phukon',\n    size = 120,\n    fontSize = 0.5,\n    initialsLength = 2,\n    rounded = false,\n    bold = false,\n    color = '8b5d5d',\n    bgColor = 'f0e9e9',\n    uppercase = true,\n    format = 'png'\n  }\n) => {\n  const defaultImg = `https://ui-avatars.com/api/${encodeURIComponent(\n    name\n  )}/${size}/${bgColor}/${color}/${initialsLength}/${fontSize}/${rounded}/${uppercase}/${bold}/${format}`\n\n  const url = `https://secure.gravatar.com/avatar/${hash}?d=${encodeURIComponent(\n    defaultImg\n  )}&s=${size}`\n\n  return url\n}\n\nexport const getAvatarURL = (email, config) =>\n  avatarUrl(hashEmail(email), config)\n\nconst Avatar = (props) => {\n  const url = avatarUrl(\n    props.hash || hashEmail(props.email),\n    omit(props, ['hash', 'email'])\n  )\n\n  return <img src={url} {...props} />\n}\n\nAvatar.propTypes = {\n  email: PropTypes.string,\n  hash: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  size: PropTypes.number,\n  fontSize: PropTypes.number,\n  initialsLength: PropTypes.number,\n  rounded: PropTypes.bool,\n  bold: PropTypes.bool,\n  bgColor: PropTypes.string,\n  color: PropTypes.string,\n  uppercase: PropTypes.bool,\n  format: PropTypes.oneOf(['svg', 'png'])\n}\n\nexport default Avatar\n","/* eslint-disable no-unused-vars */\nimport React from 'react'\nimport { Formik, Form, Field as FormikField, ErrorMessage } from 'formik'\nimport * as Yup from 'yup'\nimport Avatar from 'react-gravatar-or-initials'\nimport 'react-gravatar-or-initials/dist/index.css'\n\nconst validation = Yup.object().shape({\n  email: Yup.string().email(),\n  name: Yup.string().required(),\n  hash: Yup.string(),\n  size: Yup.number().min(0),\n  fontSize: Yup.number(),\n  initialsLength: Yup.number(),\n  rounded: Yup.bool(),\n  bold: Yup.bool(),\n  color: Yup.string(),\n  bgColor: Yup.string(),\n  uppercase: Yup.bool()\n})\n\nconst Field = (props) => (\n  <div className='form-group'>\n    <label htmlFor={`input-${props.name}`}>{props.name}</label>\n    <FormikField\n      {...props}\n      className='form-control'\n      id={`input-${props.name}`}\n    />\n    <ErrorMessage\n      name={props.name}\n      component='small'\n      className='form-text text-danger'\n    />\n  </div>\n)\n\nconst stripHashFromColor = (hexcode) =>\n  typeof hexcode === 'string' ? hexcode.slice(1) : hexcode\n\nconst getSource = (values) => `<Avatar\n  email=\"${values.email}\"\n  name=\"${values.name}\"\n  size={${values.size}}\n  fontSize={${values.fontSize}}\n  initialsLength={${values.initialsLength}}\n  color=\"${stripHashFromColor(values.color)}\"\n  bgColor=\"${stripHashFromColor(values.bgColor)}\"\n  ${values.rounded ? 'rounded ' : ''}${values.bold ? 'bold ' : ''}${\n  values.uppercase ? 'uppercase ' : ''\n}\n/>`\n\nconst App = () => {\n  return (\n    <div className='container pt-4'>\n      <h1>React Gravatar or Initials</h1>\n      <Formik\n        initialValues={{\n          email: 'hello@snehanshu.com',\n          name: 'Snehanshu Phukon',\n          hash: '',\n          size: 150,\n          fontSize: 0.5,\n          initialsLength: 2,\n          rounded: false,\n          bold: false,\n          color: '#8b5d5d',\n          bgColor: '#f0e9e9',\n          uppercase: true\n        }}\n        validationSchema={validation}\n      >\n        {({ values }) => (\n          <Form className='mt-4'>\n            <div className='row'>\n              <div className='col'>\n                <div className='text-center'>\n                  <Avatar\n                    {...values}\n                    color={stripHashFromColor(values.color)}\n                    bgColor={stripHashFromColor(values.bgColor)}\n                  />\n                </div>\n\n                <div className='p-2'>\n                  <div className='mb-4'>\n                    <p>Install from NPM</p>\n                    <code>npm install react-gravatar-or-initials</code>\n                  </div>\n\n                  <div className='mb-4'>\n                    <p>Import into your component</p>\n                    <code>import Avatar from 'react-gravatar-or-initials'</code>\n                  </div>\n\n                  <div>\n                    <p>Then use the following code</p>\n                    <textarea\n                      className='form-control'\n                      readOnly\n                      value={getSource(values)}\n                      style={{ height: '300px' }}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className='col'>\n                <Field name='email' />\n                <Field name='name' />\n                <Field name='size' type='number' />\n                <Field name='fontSize' type='number' />\n                <Field name='initialsLength' type='number' />\n\n                <div className='row'>\n                  <div className='col'>\n                    <Field name='rounded' type='checkbox' />\n                  </div>\n                  <div className='col'>\n                    <Field name='bold' type='checkbox' />\n                  </div>\n                  <div className='col'>\n                    <Field name='uppercase' type='checkbox' />\n                  </div>\n                </div>\n\n                <div className='row'>\n                  <div className='col'>\n                    <Field\n                      name='color'\n                      type='color'\n                      style={{ width: '100px', height: '50px' }}\n                    />\n                  </div>\n                  <div className='col'>\n                    <Field\n                      name='bgColor'\n                      type='color'\n                      style={{ width: '100px', height: '50px' }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Form>\n        )}\n      </Formik>\n\n      <footer className='mt-4 p-2 border-top text-center'>\n        Built and maintained by{' '}\n        <a href='https://snehanshu.com'>Snehanshu Phukon</a> &bull;{' '}\n        <a href='https://github.com/pSnehanshu/react-gravatar-or-initials'>\n          GitHub\n        </a>\n      </footer>\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}